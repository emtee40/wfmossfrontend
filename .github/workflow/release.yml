name: Release
on:
  push:
    branches:
      # - main
      # - 'v*'

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
           const currentDate = new Date().toISOString();
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: currentdate,
              name: `WFMOSSFrontend for PC v${process.env.PACKAGE_VERSION}`,
              body: 'Checkout commit for detailed changelog on what has changed.',
              draft: true,
              prerelease: false
            })
            return data.id

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
         # Windows scripting isn't the same.
      - name: Get Variables (Windows)
        run: |
          echo "$env:GITHUB_ENV"
          echo ("TAG=" + $env:GITHUB_REF.replace('refs/heads/', '')) >> $env:GITHUB_ENV
          echo "CLI_PATH=perlink.exe" >> $env:GITHUB_ENV
          echo "OS=Windows" >> $env:GITHUB_ENV
        if: matrix.os == 'windows-latest'

      - name: Get Variables (MacOS)
        run: |
          echo "TAG=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "CLI_PATH=perlink" >> $GITHUB_ENV
          echo "OS=MacOS" >> $GITHUB_ENV
        if: matrix.os == 'macos-latest'

      - name: Get Variables (Linux)
        run: |
          echo "TAG=$(echo $GITHUB_REF | sed 's/^refs\/heads\///')" >> $GITHUB_ENV
          echo "CLI_PATH=perlink" >> $GITHUB_ENV
          echo "OS=Linux-GNU" >> $GITHUB_ENV
        if: matrix.os == 'ubuntu-latest'
      - uses: actions/checkout@v3
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # tagName: ${{ env.TAG }} # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          # releaseBody: 'See the assets to download this version and install.'
          # releaseDraft: true
          # prerelease: false
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    needs: [create-release, build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })


